version: '3.8'

services:
  # Interface web GestVenv
  gestvenv-web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      # Monter le répertoire GestVenv de l'utilisateur
      - ${HOME}/.gestvenv:/home/gestvenv/.gestvenv
      # Monter les environnements (optionnel, selon la configuration)
      - ${HOME}/.gestvenv/environments:/home/gestvenv/.gestvenv/environments
      # Volume pour les logs
      - ./logs:/app/logs
      # Volume pour les données persistantes
      - ./data:/app/data
    environment:
      # Configuration de l'application
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - SERVE_STATIC_FILES=true
      
      # Configuration GestVenv
      - GESTVENV_CLI_PATH=gestvenv
      
      # Configuration base de données (SQLite par défaut)
      - DATABASE_URL=sqlite:///./data/gestvenv_web.db
      
      # Configuration WebSocket
      - WS_MAX_CONNECTIONS=100
      
      # CORS pour développement (à ajuster en production)
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8000
      
    restart: unless-stopped
    
    # Contraintes de ressources
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de données PostgreSQL (optionnel, pour environnements de production)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=gestvenv_web
      - POSTGRES_USER=gestvenv
      - POSTGRES_PASSWORD=gestvenv_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - postgres

  # Redis pour cache et sessions (optionnel)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    profiles:
      - redis

  # Nginx reverse proxy (optionnel, pour production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - gestvenv-web
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: gestvenv-network